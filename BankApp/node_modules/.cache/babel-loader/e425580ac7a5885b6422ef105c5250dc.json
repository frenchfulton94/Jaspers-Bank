{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Col, Row, ButtonToolbar, Button } from 'react-bootstrap';\nimport AlertCard from './alertcard.js';\nimport AccountCard from './accountcard.js';\nimport BillCard from './billcard.js';\n\nvar DashboardSection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DashboardSection, _Component);\n\n  function DashboardSection(props) {\n    var _this;\n\n    _classCallCheck(this, DashboardSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashboardSection).call(this, props));\n    console.log(props.parent);\n    var values;\n    var trans;\n    _this.state = {\n      values: \"\",\n      main: _this.props.main\n    };\n    _this.selectMainAccount = _this.selectMainAccount.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DashboardSection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var values;\n\n      if (this.props.values.length > 0) {\n        values = this.props.values.map(function (item) {\n          return _this2.returnCard(item);\n        });\n      } else {\n        values = React.createElement(NoValues, {\n          type: this.props.title\n        });\n      }\n\n      this.setState({\n        values: values\n      });\n    }\n  }, {\n    key: \"selectMainAccount\",\n    value: function () {\n      var _selectMainAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var selectedID, url, res, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                selectedID = event.target.value;\n                console.log(selectedID);\n                url = \"/User/\".concat(this.props.id, \"/secret\");\n                _context.next = 5;\n                return fetch(url, {\n                  method: \"post\",\n                  body: _JSON$stringify({\n                    Account_id: selectedID\n                  }),\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                });\n\n              case 5:\n                res = _context.sent;\n                _context.next = 8;\n                return res.json();\n\n              case 8:\n                json = _context.sent;\n                console.log(json);\n                this.setState({\n                  main: selectedID\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function selectMainAccount(_x) {\n        return _selectMainAccount.apply(this, arguments);\n      }\n\n      return selectMainAccount;\n    }()\n  }, {\n    key: \"returnCard\",\n    value: function returnCard(item) {\n      switch (this.props.title) {\n        case 'Alerts':\n          return React.createElement(AlertCard, {\n            value: item\n          });\n\n        case 'Bills':\n          return React.createElement(BillCard, {\n            value: item,\n            accounts: this.props.accounts\n          });\n\n        default:\n          console.log(\"transactions\");\n          console.log(item);\n          console.log(this.props.transactions[item.Account_id]);\n          return React.createElement(AccountCard, {\n            account: item,\n            transactions: this.props.transactions[item.Account_id],\n            accounts: this.props.values,\n            parent: this,\n            main: this.state.main\n          });\n      }\n    } // getAccounts(){\n    //   var id = this.props.id\n    //   const res = await fetch(`https://9d170bae.ngrok.io/Accounts/${id}/secret`)\n    //   const json = await res.json()\n    //   console.log(json)\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Row, null, React.createElement(Col, null, React.createElement(DashboardSectionHeader, {\n        sectionTitle: this.props.title\n      }), this.state.values));\n    }\n  }]);\n\n  return DashboardSection;\n}(Component);\n\nvar DashboardSectionHeader =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(DashboardSectionHeader, _Component2);\n\n  function DashboardSectionHeader() {\n    _classCallCheck(this, DashboardSectionHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DashboardSectionHeader).apply(this, arguments));\n  }\n\n  _createClass(DashboardSectionHeader, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"p\", null, this.props.sectionTitle)));\n    }\n  }]);\n\n  return DashboardSectionHeader;\n}(Component);\n\nvar NoValues =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(NoValues, _Component3);\n\n  function NoValues() {\n    _classCallCheck(this, NoValues);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NoValues).apply(this, arguments));\n  }\n\n  _createClass(NoValues, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"p\", null, \"THERE ARE NO \", this.props.type)));\n    }\n  }]);\n\n  return NoValues;\n}(Component);\n\nexport default DashboardSection;","map":{"version":3,"sources":["/Users/michaelfultonjr./Documents/BankApp/components/dashboardsection.js"],"names":["React","Component","Col","Row","ButtonToolbar","Button","AlertCard","AccountCard","BillCard","DashboardSection","props","console","log","parent","values","trans","state","main","selectMainAccount","bind","length","map","item","returnCard","title","setState","event","selectedID","target","value","url","id","fetch","method","body","Account_id","headers","res","json","accounts","transactions","DashboardSectionHeader","sectionTitle","NoValues","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Col, Row, ButtonToolbar, Button} from 'react-bootstrap';\nimport AlertCard from './alertcard.js';\nimport AccountCard from './accountcard.js';\nimport BillCard from './billcard.js';\n\nclass DashboardSection extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props.parent)\n    var values;\n    let trans\n\n    this.state = {\n      values: \"\",\n      main: this.props.main\n    }\n    this.selectMainAccount = this.selectMainAccount.bind(this)\n  }\n\n  componentDidMount(){\n    var values;\n    if (this.props.values.length > 0) {\n    values = this.props.values.map((item)=>\n\n      this.returnCard(item)\n    )\n  } else {\n    values = <NoValues type={this.props.title} />\n  }\n\n  this.setState({\n    values: values\n  })\n  }\n\n  async selectMainAccount(event){\n    let selectedID = event.target.value\n    console.log(selectedID)\n    let url = `/User/${this.props.id}/secret`\n    let res = await fetch(url, {\n        method: \"post\",\n        body: JSON.stringify({Account_id: selectedID}),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    let json = await res.json()\n    console.log(json)\n    this.setState({\n      main: selectedID\n    })\n  }\n\n  returnCard(item){\n\n    switch(this.props.title) {\n      case 'Alerts':\n          return <AlertCard value={item} />\n      case 'Bills':\n        return <BillCard value={item} accounts={this.props.accounts} />\n      default:\n      console.log(\"transactions\")\n      console.log(item)\n      console.log(this.props.transactions[item.Account_id])\n        return <AccountCard account={item}\n          transactions={this.props.transactions[item.Account_id]}\n          accounts={this.props.values} parent={this} main={this.state.main} />\n    }\n  }\n\n\n\n  // getAccounts(){\n  //   var id = this.props.id\n  //   const res = await fetch(`https://9d170bae.ngrok.io/Accounts/${id}/secret`)\n  //   const json = await res.json()\n  //   console.log(json)\n  // }\n  render(){\n\n\n\n    return(\n      <Row>\n        <Col>\n          <DashboardSectionHeader sectionTitle={this.props.title} />\n          {this.state.values}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass DashboardSectionHeader extends Component {\n  render(){\n    return(\n      <Row>\n        <Col>\n          <p>{this.props.sectionTitle}</p>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass NoValues extends Component {\n  render(){\n    return(\n      <Row>\n        <Col>\n          <p>THERE ARE NO {this.props.type}</p>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default DashboardSection\n"]},"metadata":{},"sourceType":"module"}