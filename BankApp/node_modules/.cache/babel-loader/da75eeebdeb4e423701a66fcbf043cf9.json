{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Table, Button, Form, Image } from 'react-bootstrap';\nimport Header from '../components/header.js';\nimport fetch from 'isomorphic-unfetch';\nimport { withRouter } from 'next/router';\n\nvar Records =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Records, _Component);\n\n  _createClass(Records, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req, id, account, res, json, accountsJson, filteredjson, event;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n                id = req.user.User_id;\n                account = req.query.Account;\n                console.log(req.query);\n                _context.next = 6;\n                return fetch(\"https://9d170bae.ngrok.io/Transactions/Mixed/\".concat(id, \"/0/secret\"));\n\n              case 6:\n                res = _context.sent;\n                _context.next = 9;\n                return res.json();\n\n              case 9:\n                json = _context.sent;\n                _context.next = 12;\n                return fetch(\"https://9d170bae.ngrok.io/Accounts/ids/\".concat(id, \"/secret\"));\n\n              case 12:\n                res = _context.sent;\n                _context.next = 15;\n                return res.json();\n\n              case 15:\n                accountsJson = _context.sent;\n                console.log(\"accountjson\");\n                console.log(accountsJson);\n\n                if (account != undefined) {\n                  event = {\n                    target: {\n                      value: account\n                    }\n                  };\n                  filteredjson = preHandle(event, accountsJson, json, account);\n                }\n\n                return _context.abrupt(\"return\", {\n                  transactions: json,\n                  ids: accountsJson,\n                  selectedAccount: account,\n                  filteredTransactions: filteredjson\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Records(props) {\n    var _this;\n\n    _classCallCheck(this, Records);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Records).call(this, props));\n    _this.state = {\n      selectAccount: _this.props.selectedAccount != undefined ? _this.props.selectedAccount : \"All\",\n      transactions: _this.props.transactions,\n      filteredTransactions: _this.props.filteredTransactions != undefined ? _this.props.filteredTransactions : _this.props.transactions,\n      ids: _this.props.ids\n    };\n    _this.handleSelection = _this.handleSelection.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Records, [{\n    key: \"preHandle\",\n    value: function preHandle(event, ids, json, sender) {\n      var id = event.target.value;\n      var transactions;\n\n      var isValid = function isValid() {\n        var accountIDs = ids.map(function (account) {\n          return account.Account_id;\n        });\n        return accountIDs.includes(sender);\n      };\n\n      return json.filter(function (transaction) {\n        return (isValid() ? transaction.sender_account_id : transaction.receiver_account_id) == sender;\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection(event) {\n      var _this2 = this;\n\n      var id = event.target.value;\n      var transactions;\n\n      var isValid = function isValid(props, sender) {\n        var accountIDs = props.ids.map(function (account) {\n          return account.Account_id;\n        });\n        return accountIDs.includes(sender);\n      };\n\n      if (id != \"All\") {\n        transactions = this.state.transactions.filter(function (transaction) {\n          return (isValid(_this2.state, transaction.sender_account_id) ? transaction.sender_account_id : transaction.receiver_account_id) == id;\n        });\n      } else {\n        transactions = this.state.transactions;\n      }\n\n      this.setState({\n        selectAccount: id,\n        filteredTransactions: transactions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, null, React.createElement(Header, null), React.createElement(Row, null, React.createElement(Col, null, React.createElement(FilterRecords, {\n        accounts: this.props.ids,\n        parent: this\n      })), React.createElement(Col, null, React.createElement(TransactionsTable, {\n        parent: this,\n        ids: this.props.ids\n      }))));\n    }\n  }]);\n\n  return Records;\n}(Component);\n\nvar FilterRecords =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(FilterRecords, _Component2);\n\n  function FilterRecords() {\n    _classCallCheck(this, FilterRecords);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FilterRecords).apply(this, arguments));\n  }\n\n  _createClass(FilterRecords, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, null, React.createElement(Form.Group, null, React.createElement(Form.Control, {\n        as: \"select\",\n        name: \"selectAccount\",\n        value: this.props.parent.state.selectAccount,\n        onChange: this.props.parent.handleSelection\n      }, React.createElement(\"option\", {\n        value: \"All\"\n      }, \"All Accounts\"), this.props.accounts.map(function (account) {\n        return React.createElement(\"option\", {\n          value: account.Account_id\n        }, account.Type_name + \" - \" + account.Account_id);\n      }))));\n    }\n  }]);\n\n  return FilterRecords;\n}(Component);\n\nvar TableHeader =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(TableHeader, _Component3);\n\n  function TableHeader() {\n    _classCallCheck(this, TableHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableHeader).apply(this, arguments));\n  }\n\n  _createClass(TableHeader, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"th\", null, React.createElement(Button, null, React.createElement(\"p\", null, this.props.title), React.createElement(Image, null)));\n    }\n  }]);\n\n  return TableHeader;\n}(Component);\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(TableRow, _Component4);\n\n  function TableRow() {\n    _classCallCheck(this, TableRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableRow).apply(this, arguments));\n  }\n\n  _createClass(TableRow, [{\n    key: \"render\",\n    //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n    value: function render() {\n      var isValid = function isValid(props) {\n        var ids = props.ids.map(function (account) {\n          return account.Account_id;\n        });\n        return ids.includes(props.transaction.sender_account_id);\n      };\n\n      return React.createElement(\"tr\", null, React.createElement(\"td\", null, this.props.transaction.date_time, \" \"), React.createElement(\"td\", null, \"$\", this.props.transaction.amount, \" \"), React.createElement(\"td\", null, isValid(this.props) ? this.props.transaction.sender_account_id : this.props.transaction.receiver_account_id, \" \"), React.createElement(\"td\", null, this.props.transaction.sender_name, \" \"), React.createElement(\"td\", null, this.props.transaction.receiver_name, \" \"));\n    }\n  }]);\n\n  return TableRow;\n}(Component);\n\nvar NoTransactions =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(NoTransactions, _Component5);\n\n  function NoTransactions() {\n    _classCallCheck(this, NoTransactions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NoTransactions).apply(this, arguments));\n  }\n\n  _createClass(NoTransactions, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"tr\", null, React.createElement(\"td\", {\n        colSpan: \"5\"\n      }, \"There are NO TRANSACTIONS for this Account.\"));\n    }\n  }]);\n\n  return NoTransactions;\n}(Component);\n\nvar TransactionsTable =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(TransactionsTable, _Component6);\n\n  function TransactionsTable() {\n    _classCallCheck(this, TransactionsTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TransactionsTable).apply(this, arguments));\n  }\n\n  _createClass(TransactionsTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var rows = this.props.parent.state.filteredTransactions.map(function (transaction) {\n        return React.createElement(TableRow, {\n          transaction: transaction,\n          ids: _this3.props.ids\n        });\n      });\n\n      if (rows.length == 0) {\n        rows = React.createElement(NoTransactions, null);\n      }\n\n      return React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(TableHeader, {\n        title: \"Date\"\n      }), React.createElement(TableHeader, {\n        title: \"Amount\"\n      }), React.createElement(TableHeader, {\n        title: \"Account\"\n      }), React.createElement(TableHeader, {\n        title: \"Sender\"\n      }), React.createElement(TableHeader, {\n        title: \"Receiver\"\n      }))), React.createElement(\"tbody\", null, rows));\n    }\n  }]);\n\n  return TransactionsTable;\n}(Component); //    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\n//    '/Accounts/ids/:User_id/:api_key'\n\n\nexport default withRouter(Records);","map":{"version":3,"sources":["/Users/michaelfultonjr./Documents/BankApp/pages/records.js"],"names":["React","Component","Container","Row","Col","Table","Button","Form","Image","Header","fetch","withRouter","Records","req","id","user","User_id","account","query","Account","console","log","res","json","accountsJson","undefined","event","target","value","filteredjson","preHandle","transactions","ids","selectedAccount","filteredTransactions","props","state","selectAccount","handleSelection","bind","sender","isValid","accountIDs","map","Account_id","includes","filter","transaction","sender_account_id","receiver_account_id","setState","FilterRecords","parent","accounts","Type_name","TableHeader","title","TableRow","date_time","amount","sender_name","receiver_name","NoTransactions","TransactionsTable","rows","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Container, Row, Col, Table, Button, Form,Image} from 'react-bootstrap'\nimport Header from '../components/header.js'\nimport fetch from 'isomorphic-unfetch'\nimport {withRouter} from 'next/router'\n\nclass Records extends Component {\n\n  static async getInitialProps({req}){\n    const id = req.user.User_id\n    const account = req.query.Account\n    console.log(req.query)\n    var res = await fetch(`https://9d170bae.ngrok.io/Transactions/Mixed/${id}/0/secret`)\n\n    const json = await res.json()\n\n    res = await fetch(`https://9d170bae.ngrok.io/Accounts/ids/${id}/secret`)\n\n    const accountsJson = await res.json()\n    console.log(\"accountjson\")\n    console.log(accountsJson)\n    var filteredjson;\n    if (account != undefined){\n          const event = {\n        target: {value: account}\n          }\n        filteredjson = preHandle(event, accountsJson, json, account)\n        }\n\n\n    return {transactions: json, ids: accountsJson, selectedAccount: account, filteredTransactions: filteredjson}\n  }\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      selectAccount: this.props.selectedAccount != undefined ? this.props.selectedAccount : \"All\",\n      transactions: this.props.transactions,\n      filteredTransactions: this.props.filteredTransactions != undefined ? this.props.filteredTransactions : this.props.transactions,\n      ids: this.props.ids\n    }\n\n    this.handleSelection = this.handleSelection.bind(this)\n  }\n\n  preHandle(event, ids, json,sender){\n    let id = event.target.value\n    var transactions;\n    var isValid = function(){\n    var accountIDs = ids.map((account) => account.Account_id )\n    return accountIDs.includes(sender)\n    }\n\n    return json.filter((transaction) => (isValid() ? transaction.sender_account_id : transaction.receiver_account_id) == sender )\n  }\n\n  handleSelection(event){\n    let id = event.target.value\n    var transactions;\n    var isValid = function(props, sender){\n    var accountIDs = props.ids.map((account) => account.Account_id )\n    return accountIDs.includes(sender)\n    }\n\n    if (id != \"All\") {\n      transactions = this.state.transactions.filter((transaction) =>\n      (isValid(this.state, transaction.sender_account_id) ?\n      transaction.sender_account_id : transaction.receiver_account_id) == id\n    )\n    } else {\n      transactions  = this.state.transactions\n    }\n    this.setState({\n      selectAccount: id,\n      filteredTransactions: transactions\n    })\n  }\n\n  render(){\n    return(\n      <Container>\n      <Header />\n        <Row>\n          <Col>\n            <FilterRecords accounts={this.props.ids} parent={this} />\n          </Col>\n          <Col>\n            <TransactionsTable parent={this} ids={this.props.ids} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nclass FilterRecords extends Component {\n  render(){\n    return(\n      <Form>\n        <Form.Group>\n          <Form.Control as =\"select\" name=\"selectAccount\" value={this.props.parent.state.selectAccount} onChange={this.props.parent.handleSelection}>\n            <option value=\"All\">All Accounts</option>\n            {this.props.accounts.map((account) =>\n                <option value={account.Account_id}>{account.Type_name + \" - \" + account.Account_id}</option>\n            ) }\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    )\n  }\n}\n\nclass TableHeader extends Component {\n  render(){\n    return(\n      <th>\n        <Button>\n        <p>{this.props.title}</p>\n        <Image />\n        </Button>\n      </th>\n    )\n  }\n}\n\nclass TableRow extends Component {\n  //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n\n  render(){\n    var isValid = function(props){\n    var ids = props.ids.map((account) => account.Account_id)\n    return ids.includes(props.transaction.sender_account_id)\n    }\n    return(\n      <tr>\n        <td>{this.props.transaction.date_time} </td>\n        <td>${this.props.transaction.amount} </td>\n        <td>{isValid(this.props) ?\n          this.props.transaction.sender_account_id :\n          this.props.transaction.receiver_account_id } </td>\n        <td>{this.props.transaction.sender_name} </td>\n        <td>{this.props.transaction.receiver_name} </td>\n      </tr>\n    )\n  }\n}\n\nclass NoTransactions extends Component{\n  render(){\n    return(\n      <tr>\n        <td colSpan=\"5\">There are NO TRANSACTIONS for this Account.</td>\n      </tr>\n    )\n  }\n}\n\nclass TransactionsTable extends Component {\n\n  render(){\n    var rows = this.props.parent.state.filteredTransactions.map((transaction) => <TableRow transaction={transaction} ids={this.props.ids} />)\n    if (rows.length == 0) {\n      rows = <NoTransactions />\n      }\n    return(\n      <Table striped bordered hover >\n        <thead>\n          <tr>\n            <TableHeader title=\"Date\" />\n            <TableHeader title=\"Amount\" />\n            <TableHeader title=\"Account\" />\n            <TableHeader title=\"Sender\" />\n            <TableHeader title=\"Receiver\" />\n          </tr>\n        </thead>\n        <tbody>\n            {rows}\n        </tbody>\n      </Table>\n    )\n  }\n}\n//    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\n//    '/Accounts/ids/:User_id/:api_key'\nexport default withRouter(Records)\n"]},"metadata":{},"sourceType":"module"}