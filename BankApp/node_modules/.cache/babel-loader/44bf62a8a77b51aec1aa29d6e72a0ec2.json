{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Table, Button, Form, Image } from 'react-bootstrap';\nimport Header from '../components/header.js';\nimport fetch from 'isomorphic-unfetch';\n\nvar Records =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Records, _Component);\n\n  _createClass(Records, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req, res, json, accountsJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n                _context.next = 3;\n                return fetch(\"https://9d170bae.ngrok.io/Transactions/Mixed/14765d72-67c6-11e9-b73a-59c7d9ed16a4/0/secret\");\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                json = _context.sent;\n                _context.next = 9;\n                return fetch(\"https://9d170bae.ngrok.io/Accounts/ids/14765d72-67c6-11e9-b73a-59c7d9ed16a4/secret\");\n\n              case 9:\n                res = _context.sent;\n                _context.next = 12;\n                return res.json();\n\n              case 12:\n                accountsJson = _context.sent;\n                console.log(\"accountjson\");\n                console.log(accountsJson);\n                return _context.abrupt(\"return\", {\n                  transactions: json,\n                  ids: accountsJson\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Records(props) {\n    var _this;\n\n    _classCallCheck(this, Records);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Records).call(this, props));\n    _this.state = {\n      accounts: [],\n      senders: [],\n      receivers: [],\n      filteredTransactions: props.transactions,\n      transactions: props.transactions,\n      ids: _this.props.ids\n    };\n    _this.fiterTransactions = _this.filterTransactions.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Records, [{\n    key: \"filterTransactions\",\n    value: function filterTransactions(event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var checked = event.target.checked;\n\n      switch (name) {\n        case \"Account\":\n          var values = this.state.accounts;\n\n          if (checked) {\n            values.push(value);\n          } else {\n            values = values.filter(function (current) {\n              return !(current == value);\n            });\n          }\n\n          this.setState({\n            accounts: values\n          });\n          break;\n\n        case \"Receiver\":\n          var values = this.state.receivers;\n\n          if (checked) {\n            values.push(value);\n          } else {\n            values = values.filter(function (current) {\n              return !(current == value);\n            });\n          }\n\n          values.push(value);\n          this.setState({\n            receivers: values\n          });\n          break;\n\n        case \"Sender\":\n          var values = this.state.senders;\n\n          if (checked) {\n            values.push(value);\n          } else {\n            values = values.filter(function (current) {\n              return !(current == value);\n            });\n          }\n\n          values.push(value);\n          this.setState({\n            senders: values\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      var isValid = function isValid(transaction) {\n        var ids = this.state.ids.map(function (account) {\n          return account.Account_id;\n        });\n        return ids.includes(transaction.sender_account_id);\n      };\n\n      var filteredTransactions = this.state.transactions.filter(function (transaction) {\n        var condition;\n        var account = isValid(transaction) ? transaction.sender_account_id : transaction.receiver_account_id;\n        return this.state.accounts.includes(account) && this.state.receivers.includes(transaction.receiver_account_id) && this.state.senders.includes(transaction.sender_account_id);\n      });\n      this.setState({\n        filteredTransactions: filteredTransactions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, null, React.createElement(Header, null), React.createElement(Row, null, React.createElement(Col, null, React.createElement(RecordsFilter, {\n        selectedAccount: this.props.id,\n        ids: this.state.ids,\n        parent: this,\n        transactions: this.state.transactions\n      })), React.createElement(Col, null, React.createElement(TransactionsTable, {\n        transactions: this.state.filteredTransactions,\n        ids: this.state.ids\n      }))));\n    }\n  }]);\n\n  return Records;\n}(Component);\n\nvar RecordsFilter =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(RecordsFilter, _Component2);\n\n  function RecordsFilter() {\n    _classCallCheck(this, RecordsFilter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecordsFilter).apply(this, arguments));\n  }\n\n  _createClass(RecordsFilter, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var temp = [];\n      var condition;\n      var senderList = this.props.transactions.filter(function (transaction) {\n        if (!temp.includes(transaction.sender_account_id)) {\n          temp.push(transaction.sender_account_id);\n          return true;\n        }\n\n        return false;\n      });\n      temp = [];\n      var receiverList = this.props.transactions.filter(function (transaction) {\n        if (!temp.includes(transaction.receiver_account_id)) {\n          console.log(\"filter\");\n          console.log(temp);\n          temp.push(transaction.receiver_account_id);\n          return true;\n        }\n\n        return false;\n      });\n      return React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"p\", null, \"Filter By:\"), React.createElement(Form, null, React.createElement(Form.Group, null, React.createElement(Form.Label, null, \"Select an Account:\"), this.props.ids.map(function (account) {\n        return React.createElement(Form.Check, {\n          checked: true,\n          type: \"checkbox\",\n          name: \"Account\",\n          onChange: _this2.props.parent.filterTransactions,\n          value: account.Account_id,\n          label: account.Type_name + \" - \" + account.Account_id\n        });\n      })), React.createElement(Form.Group, null, React.createElement(Form.Label, null, \"Sender:\"), senderList.map(function (transaction) {\n        return React.createElement(Form.Check, {\n          checked: true,\n          type: \"checkbox\",\n          name: \"Sender\",\n          onChange: _this2.props.parent.filterTransactions,\n          value: transaction.sender_account_id,\n          label: transaction.sender_name + \" - \" + transaction.sender_account_id\n        });\n      })), React.createElement(Form.Group, null, React.createElement(Form.Label, null, \"Reciever:\"), receiverList.map(function (transaction) {\n        return React.createElement(Form.Check, {\n          checked: true,\n          type: \"checkbox\",\n          name: \"Sender\",\n          onChange: _this2.props.parent.filterTransactions,\n          value: transaction.sender_account_id,\n          label: transaction.sender_name + \" - \" + transaction.sender_account_id\n        });\n      })))));\n    }\n  }]);\n\n  return RecordsFilter;\n}(Component);\n\nvar TableHeader =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(TableHeader, _Component3);\n\n  function TableHeader() {\n    _classCallCheck(this, TableHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableHeader).apply(this, arguments));\n  }\n\n  _createClass(TableHeader, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"th\", null, React.createElement(Button, null, React.createElement(\"p\", null, this.props.title), React.createElement(Image, null)));\n    }\n  }]);\n\n  return TableHeader;\n}(Component);\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(TableRow, _Component4);\n\n  function TableRow() {\n    _classCallCheck(this, TableRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableRow).apply(this, arguments));\n  }\n\n  _createClass(TableRow, [{\n    key: \"render\",\n    //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n    value: function render() {\n      console.log(\"idsss\");\n      console.log(this.props.ids);\n\n      var isValid = function isValid(props) {\n        var ids = props.ids.map(function (account) {\n          return account.Account_id;\n        });\n        console.log(ids);\n        return ids.includes(props.transaction.sender_account_id);\n      };\n\n      return React.createElement(\"tr\", null, React.createElement(\"td\", null, this.props.transaction.date_time, \" \"), React.createElement(\"td\", null, \"$\", this.props.transaction.amount, \" \"), React.createElement(\"td\", null, isValid(this.props) ? this.props.transaction.sender_account_id : this.props.transaction.receiver_account_id, \" \"), React.createElement(\"td\", null, this.props.transaction.sender_name, \" \"), React.createElement(\"td\", null, this.props.transaction.receiver_name, \" \"));\n    }\n  }]);\n\n  return TableRow;\n}(Component);\n\nvar TransactionsTable =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(TransactionsTable, _Component5);\n\n  function TransactionsTable(props) {\n    var _this3;\n\n    _classCallCheck(this, TransactionsTable);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(TransactionsTable).call(this, props));\n    _this3.state = {\n      data: _this3.props.transactions.map(function (transaction) {\n        return React.createElement(TableRow, {\n          transaction: transaction,\n          ids: _this3.props.ids\n        });\n      })\n    };\n    return _this3;\n  }\n\n  _createClass(TransactionsTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(TableHeader, {\n        title: \"Date\"\n      }), React.createElement(TableHeader, {\n        title: \"Amount\"\n      }), React.createElement(TableHeader, {\n        title: \"Account\"\n      }), React.createElement(TableHeader, {\n        title: \"Sender\"\n      }), React.createElement(TableHeader, {\n        title: \"Receiver\"\n      }))), React.createElement(\"tbody\", null, this.state.data));\n    }\n  }]);\n\n  return TransactionsTable;\n}(Component); //    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\n//    '/Accounts/ids/:User_id/:api_key'\n\n\nexport default Records;","map":{"version":3,"sources":["/Users/michaelfultonjr./Documents/BankApp/pages/records.js"],"names":["React","Component","Container","Row","Col","Table","Button","Form","Image","Header","fetch","Records","req","res","json","accountsJson","console","log","transactions","ids","props","state","accounts","senders","receivers","filteredTransactions","fiterTransactions","filterTransactions","bind","event","name","target","value","checked","values","push","filter","current","setState","isValid","transaction","map","account","Account_id","includes","sender_account_id","condition","receiver_account_id","id","RecordsFilter","temp","senderList","receiverList","parent","Type_name","sender_name","TableHeader","title","TableRow","date_time","amount","receiver_name","TransactionsTable","data"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Container, Row, Col, Table, Button, Form,Image} from 'react-bootstrap'\nimport Header from '../components/header.js'\nimport fetch from 'isomorphic-unfetch'\n\nclass Records extends Component {\n\n  static async getInitialProps({req}){\n    // const id = req.user.User_id\n    var res = await fetch(`https://9d170bae.ngrok.io/Transactions/Mixed/14765d72-67c6-11e9-b73a-59c7d9ed16a4/0/secret`)\n\n    const json = await res.json()\n\n    res = await fetch(`https://9d170bae.ngrok.io/Accounts/ids/14765d72-67c6-11e9-b73a-59c7d9ed16a4/secret`)\n\n    const accountsJson = await res.json()\n    console.log(\"accountjson\")\n    console.log(accountsJson)\n\n    return {transactions: json, ids: accountsJson}\n  }\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      accounts: [],\n      senders: [],\n      receivers: [],\n      filteredTransactions: props.transactions,\n      transactions: props.transactions,\n      ids: this.props.ids\n    }\n\n    this.fiterTransactions = this.filterTransactions.bind(this)\n\n  }\n\nfilterTransactions(event){\n  let name = event.target.name\n  let value = event.target.value\n  let checked = event.target.checked\n  switch(name) {\n    case \"Account\":\n      var values = this.state.accounts\n      if (checked) {\n        values.push(value)\n      } else {\n        values = values.filter((current) => !(current == value))\n      }\n      this.setState({\n        accounts: values\n      })\n    break;\n    case \"Receiver\":\n    var values = this.state.receivers\n    if (checked) {\n      values.push(value)\n    } else {\n      values = values.filter((current) => !(current == value))\n    }\n    values.push(value)\n    this.setState({\n      receivers: values\n    })\n      break\n    case \"Sender\":\n    var values = this.state.senders\n    if (checked) {\n      values.push(value)\n    } else {\n      values = values.filter((current) => !(current == value))\n    }\n    values.push(value)\n    this.setState({\n      senders: values\n    })\n      break\n    default:\n      break\n  }\n\n  var isValid = function(transaction){\n  var ids = this.state.ids.map((account) => account.Account_id)\n  return ids.includes(transaction.sender_account_id)\n  }\n  var filteredTransactions = this.state.transactions.filter(function(transaction){\n    var condition;\n    var account = isValid(transaction) ?\n    transaction.sender_account_id :\n      transaction.receiver_account_id\n\n    return this.state.accounts.includes(account) &&\n    this.state.receivers.includes(transaction.receiver_account_id)  &&\n    this.state.senders.includes(transaction.sender_account_id)\n  })\n\n  this.setState({\n    filteredTransactions: filteredTransactions\n  })\n\n}\n\n  render(){\n    return(\n      <Container>\n      <Header />\n        <Row>\n          <Col>\n            <RecordsFilter selectedAccount={this.props.id} ids={this.state.ids} parent={this} transactions={this.state.transactions} />\n          </Col>\n          <Col>\n            <TransactionsTable transactions={this.state.filteredTransactions} ids={this.state.ids} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nclass RecordsFilter extends Component {\n\n  render(){\n      var temp = []\n      var condition;\n      let senderList = this.props.transactions.filter(function(transaction){\n\n          if (!temp.includes(transaction.sender_account_id)){\n\n            temp.push(transaction.sender_account_id)\n            return true\n          }\n          return false\n      })\n      temp = []\n      let receiverList = this.props.transactions.filter(function(transaction){\n\n          if (!temp.includes(transaction.receiver_account_id)){\n            console.log(\"filter\")\nconsole.log(temp)\n            temp.push(transaction.receiver_account_id)\n            return true\n          }\n          return false\n      })\n    return(\n      <Row>\n        <Col>\n        <p>Filter By:</p>\n        <Form>\n        <Form.Group>\n          <Form.Label>Select an Account:</Form.Label>\n          {\n            this.props.ids.map((account)=>\n            <Form.Check\n            checked\n            type=\"checkbox\"\n            name=\"Account\"\n            onChange={this.props.parent.filterTransactions}\n            value={account.Account_id}\n            label={account.Type_name + \" - \" + account.Account_id} />)\n          }\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Sender:</Form.Label>\n          {\n            senderList.map((transaction) =>\n            <Form.Check\n            checked\n            type=\"checkbox\"\n            name=\"Sender\"\n            onChange={this.props.parent.filterTransactions}\n            value={transaction.sender_account_id}\n            label={transaction.sender_name + \" - \" + transaction.sender_account_id} />)\n          }\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Reciever:</Form.Label>\n          {\n            receiverList.map((transaction) =>\n            <Form.Check\n            checked\n            type=\"checkbox\"\n            name=\"Sender\"\n            onChange={this.props.parent.filterTransactions}\n            value={transaction.sender_account_id}\n            label={transaction.sender_name + \" - \" + transaction.sender_account_id} />)\n          }\n        </Form.Group>\n\n        </Form>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass TableHeader extends Component {\n  render(){\n    return(\n      <th>\n        <Button>\n        <p>{this.props.title}</p>\n        <Image />\n        </Button>\n      </th>\n    )\n  }\n}\n\nclass TableRow extends Component {\n  //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n\n  render(){\n    console.log(\"idsss\")\n    console.log(this.props.ids)\n    var isValid = function(props){\n    var ids = props.ids.map((account) => account.Account_id)\n    console.log(ids)\n    return ids.includes(props.transaction.sender_account_id)\n    }\n    return(\n      <tr>\n        <td>{this.props.transaction.date_time} </td>\n        <td>${this.props.transaction.amount} </td>\n        <td>{isValid(this.props) ?\n          this.props.transaction.sender_account_id :\n          this.props.transaction.receiver_account_id } </td>\n        <td>{this.props.transaction.sender_name} </td>\n        <td>{this.props.transaction.receiver_name} </td>\n      </tr>\n    )\n  }\n}\n\nclass TransactionsTable extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      data: this.props.transactions.map((transaction) => <TableRow transaction={transaction} ids={this.props.ids} />)\n    }\n  }\n\n  render(){\n    return(\n      <Table striped bordered hover >\n        <thead>\n          <tr>\n            <TableHeader title=\"Date\" />\n            <TableHeader title=\"Amount\" />\n            <TableHeader title=\"Account\" />\n            <TableHeader title=\"Sender\" />\n            <TableHeader title=\"Receiver\" />\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.data}\n        </tbody>\n      </Table>\n    )\n  }\n}\n//    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\n//    '/Accounts/ids/:User_id/:api_key'\nexport default Records\n"]},"metadata":{},"sourceType":"module"}