{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Table, Button, Form, Image } from 'react-bootstrap';\nimport Header from '../components/header.js';\nimport fetch from 'isomorphic-unfetch';\n\nvar Records =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Records, _Component);\n\n  _createClass(Records, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req, res, json, accountsJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n                _context.next = 3;\n                return fetch(\"https://9d170bae.ngrok.io/Transactions/Mixed/14765d72-67c6-11e9-b73a-59c7d9ed16a4/0/secret\");\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                json = _context.sent;\n                _context.next = 9;\n                return fetch(\"https://9d170bae.ngrok.io/Accounts/ids/14765d72-67c6-11e9-b73a-59c7d9ed16a4/secret\");\n\n              case 9:\n                res = _context.sent;\n                _context.next = 12;\n                return res.json();\n\n              case 12:\n                accountsJson = _context.sent;\n                console.log(\"accountjson\");\n                console.log(accountsJson);\n                return _context.abrupt(\"return\", {\n                  transactions: json,\n                  ids: accountsJson\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Records(props) {\n    var _this;\n\n    _classCallCheck(this, Records);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Records).call(this, props));\n    _this.state = {\n      selectAccount: _this.props.ids[0].Account_id\n    };\n    return _this;\n  }\n\n  _createClass(Records, [{\n    key: \"handleSelection\",\n    value: function handleSelection(event) {\n      var id = event.target.value;\n      this.setState({\n        selectAccount: id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, null, React.createElement(Header, null), React.createElement(Row, null, React.createElement(Col, null, React.createElement(FilterRecords, {\n        accounts: this.props.ids,\n        parent: this\n      })), React.createElement(Col, null, React.createElement(TransactionsTable, {\n        transactions: this.props.transactions,\n        ids: this.props.ids\n      }))));\n    }\n  }]);\n\n  return Records;\n}(Component);\n\nvar FilterRecords =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(FilterRecords, _Component2);\n\n  function FilterRecords() {\n    _classCallCheck(this, FilterRecords);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FilterRecords).apply(this, arguments));\n  }\n\n  _createClass(FilterRecords, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, null, React.createElement(Form.Group, null, React.createElement(Form.Control, {\n        as: \"select\",\n        name: \"selectAccount\",\n        value: this.parent.state.selectAccount\n      }, this.props.accounts.map(function (account) {\n        return React.createElement(\"option\", {\n          value: account.Account_id\n        }, account.Type_name + \" - \" + account.Account_id);\n      }))));\n    }\n  }]);\n\n  return FilterRecords;\n}(Component);\n\nvar TableHeader =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(TableHeader, _Component3);\n\n  function TableHeader() {\n    _classCallCheck(this, TableHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableHeader).apply(this, arguments));\n  }\n\n  _createClass(TableHeader, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"th\", null, React.createElement(Button, null, React.createElement(\"p\", null, this.props.title), React.createElement(Image, null)));\n    }\n  }]);\n\n  return TableHeader;\n}(Component);\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(TableRow, _Component4);\n\n  function TableRow() {\n    _classCallCheck(this, TableRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableRow).apply(this, arguments));\n  }\n\n  _createClass(TableRow, [{\n    key: \"render\",\n    //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n    value: function render() {\n      var isValid = function isValid(props) {\n        var ids = props.ids.map(function (account) {\n          return account.Account_id;\n        });\n        return ids.includes(props.transaction.sender_account_id);\n      };\n\n      return React.createElement(\"tr\", null, React.createElement(\"td\", null, this.props.transaction.date_time, \" \"), React.createElement(\"td\", null, \"$\", this.props.transaction.amount, \" \"), React.createElement(\"td\", null, isValid(this.props) ? this.props.transaction.sender_account_id : this.props.transaction.receiver_account_id, \" \"), React.createElement(\"td\", null, this.props.transaction.sender_name, \" \"), React.createElement(\"td\", null, this.props.transaction.receiver_name, \" \"));\n    }\n  }]);\n\n  return TableRow;\n}(Component);\n\nvar TransactionsTable =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(TransactionsTable, _Component5);\n\n  function TransactionsTable() {\n    _classCallCheck(this, TransactionsTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TransactionsTable).apply(this, arguments));\n  }\n\n  _createClass(TransactionsTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(TableHeader, {\n        title: \"Date\"\n      }), React.createElement(TableHeader, {\n        title: \"Amount\"\n      }), React.createElement(TableHeader, {\n        title: \"Account\"\n      }), React.createElement(TableHeader, {\n        title: \"Sender\"\n      }), React.createElement(TableHeader, {\n        title: \"Receiver\"\n      }))), React.createElement(\"tbody\", null, this.props.transactions.map(function (transaction) {\n        return React.createElement(TableRow, {\n          transaction: transaction,\n          ids: _this2.props.ids\n        });\n      })));\n    }\n  }]);\n\n  return TransactionsTable;\n}(Component); //    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\n//    '/Accounts/ids/:User_id/:api_key'\n\n\nexport default Records;","map":{"version":3,"sources":["/Users/michaelfultonjr./Documents/BankApp/pages/records.js"],"names":["React","Component","Container","Row","Col","Table","Button","Form","Image","Header","fetch","Records","req","res","json","accountsJson","console","log","transactions","ids","props","state","selectAccount","Account_id","event","id","target","value","setState","FilterRecords","parent","accounts","map","account","Type_name","TableHeader","title","TableRow","isValid","includes","transaction","sender_account_id","date_time","amount","receiver_account_id","sender_name","receiver_name","TransactionsTable"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Container, Row, Col, Table, Button, Form,Image} from 'react-bootstrap'\nimport Header from '../components/header.js'\nimport fetch from 'isomorphic-unfetch'\n\nclass Records extends Component {\n\n  static async getInitialProps({req}){\n    // const id = req.user.User_id\n    var res = await fetch(`https://9d170bae.ngrok.io/Transactions/Mixed/14765d72-67c6-11e9-b73a-59c7d9ed16a4/0/secret`)\n\n    const json = await res.json()\n\n    res = await fetch(`https://9d170bae.ngrok.io/Accounts/ids/14765d72-67c6-11e9-b73a-59c7d9ed16a4/secret`)\n\n    const accountsJson = await res.json()\n    console.log(\"accountjson\")\n    console.log(accountsJson)\n\n    return {transactions: json, ids: accountsJson}\n  }\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      selectAccount: this.props.ids[0].Account_id\n    }\n  }\n\n  handleSelection(event){\n    let id = event.target.value\n    this.setState({\n      selectAccount: id\n    })\n  }\n\n  render(){\n    return(\n      <Container>\n      <Header />\n        <Row>\n          <Col>\n            <FilterRecords accounts={this.props.ids} parent={this} />\n          </Col>\n          <Col>\n            <TransactionsTable transactions={this.props.transactions} ids={this.props.ids} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nclass FilterRecords extends Component {\n  render(){\n    return(\n      <Form>\n        <Form.Group>\n          <Form.Control as =\"select\" name=\"selectAccount\" value={this.parent.state.selectAccount}>\n            {this.props.accounts.map((account) =>\n                <option value={account.Account_id}>{account.Type_name + \" - \" + account.Account_id}</option>\n            ) }\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    )\n  }\n}\n\nclass TableHeader extends Component {\n  render(){\n    return(\n      <th>\n        <Button>\n        <p>{this.props.title}</p>\n        <Image />\n        </Button>\n      </th>\n    )\n  }\n}\n\nclass TableRow extends Component {\n  //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n\n  render(){\n    var isValid = function(props){\n    var ids = props.ids.map((account) => account.Account_id)\n    return ids.includes(props.transaction.sender_account_id)\n    }\n    return(\n      <tr>\n        <td>{this.props.transaction.date_time} </td>\n        <td>${this.props.transaction.amount} </td>\n        <td>{isValid(this.props) ?\n          this.props.transaction.sender_account_id :\n          this.props.transaction.receiver_account_id } </td>\n        <td>{this.props.transaction.sender_name} </td>\n        <td>{this.props.transaction.receiver_name} </td>\n      </tr>\n    )\n  }\n}\n\nclass TransactionsTable extends Component {\n\n  render(){\n    return(\n      <Table striped bordered hover >\n        <thead>\n          <tr>\n            <TableHeader title=\"Date\" />\n            <TableHeader title=\"Amount\" />\n            <TableHeader title=\"Account\" />\n            <TableHeader title=\"Sender\" />\n            <TableHeader title=\"Receiver\" />\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.transactions.map((transaction) => <TableRow transaction={transaction} ids={this.props.ids} />)}\n        </tbody>\n      </Table>\n    )\n  }\n}\n//    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\n//    '/Accounts/ids/:User_id/:api_key'\nexport default Records\n"]},"metadata":{},"sourceType":"module"}