{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Table, Button, Form, Image } from 'react-bootstrap';\nimport Header from '../components/header.js';\nimport fetch from 'isomorphic-unfetch';\nimport { withRouter } from 'next/router';\n\nvar Records =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Records, _Component);\n\n  _createClass(Records, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req, preHandle, id, account, res, json, accountsJson, filteredjson, event;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n\n                preHandle = function preHandle(event, ids, json, sender) {\n                  var id = event.target.value;\n                  var transactions;\n\n                  var isValid = function isValid() {\n                    var accountIDs = ids.map(function (account) {\n                      return account.Account_id;\n                    });\n                    return accountIDs.includes(sender);\n                  };\n\n                  return json.filter(function (transaction) {\n                    return (isValid() ? transaction.sender_account_id : transaction.receiver_account_id) == sender;\n                  });\n                };\n\n                id = req.user.User_id;\n                account = req.query.Account;\n                console.log(req.query);\n                _context.next = 7;\n                return fetch(\"https://9d170bae.ngrok.io/Transactions/Mixed/\".concat(id, \"/0/secret\"));\n\n              case 7:\n                res = _context.sent;\n                _context.next = 10;\n                return res.json();\n\n              case 10:\n                json = _context.sent;\n                _context.next = 13;\n                return fetch(\"https://9d170bae.ngrok.io/Accounts/ids/\".concat(id, \"/secret\"));\n\n              case 13:\n                res = _context.sent;\n                _context.next = 16;\n                return res.json();\n\n              case 16:\n                accountsJson = _context.sent;\n                console.log(\"accountjson\");\n                console.log(accountsJson);\n\n                if (account != undefined) {\n                  event = {\n                    target: {\n                      value: account\n                    }\n                  };\n                  filteredjson = preHandle(event, accountsJson, json, account);\n                }\n\n                return _context.abrupt(\"return\", {\n                  transactions: json,\n                  ids: accountsJson,\n                  selectedAccount: account,\n                  filteredTransactions: filteredjson\n                });\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Records(props) {\n    var _this;\n\n    _classCallCheck(this, Records);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Records).call(this, props));\n    _this.state = {\n      selectAccount: _this.props.selectedAccount != undefined ? _this.props.selectedAccount : \"All\",\n      transactions: _this.props.transactions,\n      filteredTransactions: _this.props.filteredTransactions != undefined ? _this.props.filteredTransactions : _this.props.transactions,\n      ids: _this.props.ids\n    };\n    _this.handleSelection = _this.handleSelection.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Records, [{\n    key: \"handleSelection\",\n    value: function handleSelection(event) {\n      var _this2 = this;\n\n      var id = event.target.value;\n      var transactions;\n\n      var isValid = function isValid(props, sender) {\n        var accountIDs = props.ids.map(function (account) {\n          return account.Account_id;\n        });\n        return accountIDs.includes(sender);\n      };\n\n      if (id != \"All\") {\n        transactions = this.state.transactions.filter(function (transaction) {\n          return (isValid(_this2.state, transaction.sender_account_id) ? transaction.sender_account_id : transaction.receiver_account_id) == id;\n        });\n      } else {\n        transactions = this.state.transactions;\n      }\n\n      this.setState({\n        selectAccount: id,\n        filteredTransactions: transactions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, null, React.createElement(Header, null), React.createElement(Row, null, React.createElement(Col, null, React.createElement(FilterRecords, {\n        accounts: this.props.ids,\n        parent: this\n      })), React.createElement(Col, null, React.createElement(TransactionsTable, {\n        parent: this,\n        ids: this.props.ids\n      }))));\n    }\n  }]);\n\n  return Records;\n}(Component);\n\nvar FilterRecords =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(FilterRecords, _Component2);\n\n  function FilterRecords() {\n    _classCallCheck(this, FilterRecords);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FilterRecords).apply(this, arguments));\n  }\n\n  _createClass(FilterRecords, [{\n    key: \"render\",\n    value: function render() {\n      var accountEnding;\n      return React.createElement(Form, null, React.createElement(Form.Group, null, React.createElement(Form.Control, {\n        as: \"select\",\n        name: \"selectAccount\",\n        value: this.props.parent.state.selectAccount,\n        onChange: this.props.parent.handleSelection\n      }, React.createElement(\"option\", {\n        value: \"All\"\n      }, \"All Accounts\"), this.props.accounts.map(function (account) {\n        accountEnding = account.Account_num.substr(account.Account_num.length - 4);\n        return React.createElement(\"option\", {\n          value: account.Account_id\n        }, account.Type_name, \" - ending in #...\", accountEnding);\n      }))));\n    }\n  }]);\n\n  return FilterRecords;\n}(Component);\n\nvar TableHeader =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(TableHeader, _Component3);\n\n  function TableHeader() {\n    _classCallCheck(this, TableHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableHeader).apply(this, arguments));\n  }\n\n  _createClass(TableHeader, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"th\", null, React.createElement(Button, null, React.createElement(\"p\", null, this.props.title), React.createElement(Image, null)));\n    }\n  }]);\n\n  return TableHeader;\n}(Component);\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(TableRow, _Component4);\n\n  function TableRow() {\n    _classCallCheck(this, TableRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableRow).apply(this, arguments));\n  }\n\n  _createClass(TableRow, [{\n    key: \"isValid\",\n    //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n    value: function isValid() {\n      var ids = this.props.ids.map(function (account) {\n        return account.Account_id;\n      });\n      return ids.includes(this.props.transaction.sender_account_id);\n    }\n  }, {\n    key: \"getAccountNum\",\n    value: function getAccountNum(id) {\n      return this.props.ids.map(function (account) {\n        if (account.Account_id == id) {\n          return account.Account_num;\n        }\n      });\n    }\n  }, {\n    key: \"createDateTime\",\n    value: function createDateTime(dateTime) {\n      var dateTimeArray = dateTime.split(\"T\");\n      var dateArray = dateTimeArray[0].split('-');\n      var year = dateArray[0];\n      var month = dateArray[1];\n      var day = dateArray[2];\n      var dateString = month + \"/\" + day + \"/\" + year;\n      var time = dateTimeArray[1].substr(dateTimeArray[1].length - 8);\n      var finalString = dateString + \" \" + time;\n      return finalString;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"tr\", null, React.createElement(\"td\", null, this.createDateTime(this.props.transaction.date_time), \" \"), React.createElement(\"td\", null, \"$\", this.props.transaction.amount, \" \"), React.createElement(\"td\", null, this.getAccountNum(this.isValid(this.props) ? this.props.transaction.sender_account_id : this.props.transaction.receiver_account_id), \" \"), React.createElement(\"td\", null, this.props.transaction.sender_name, \" \"), React.createElement(\"td\", null, this.props.transaction.receiver_name, \" \"));\n    }\n  }]);\n\n  return TableRow;\n}(Component);\n\nvar NoTransactions =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(NoTransactions, _Component5);\n\n  function NoTransactions() {\n    _classCallCheck(this, NoTransactions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NoTransactions).apply(this, arguments));\n  }\n\n  _createClass(NoTransactions, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"tr\", null, React.createElement(\"td\", {\n        colSpan: \"5\"\n      }, \"There are NO TRANSACTIONS for this Account.\"));\n    }\n  }]);\n\n  return NoTransactions;\n}(Component);\n\nvar TransactionsTable =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(TransactionsTable, _Component6);\n\n  function TransactionsTable() {\n    _classCallCheck(this, TransactionsTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TransactionsTable).apply(this, arguments));\n  }\n\n  _createClass(TransactionsTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var rows = this.props.parent.state.filteredTransactions.map(function (transaction) {\n        return React.createElement(TableRow, {\n          transaction: transaction,\n          ids: _this3.props.ids\n        });\n      });\n\n      if (rows.length == 0) {\n        rows = React.createElement(NoTransactions, null);\n      }\n\n      return React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(TableHeader, {\n        title: \"Date\"\n      }), React.createElement(TableHeader, {\n        title: \"Amount\"\n      }), React.createElement(TableHeader, {\n        title: \"Account\"\n      }), React.createElement(TableHeader, {\n        title: \"Sender\"\n      }), React.createElement(TableHeader, {\n        title: \"Receiver\"\n      }))), React.createElement(\"tbody\", null, rows));\n    }\n  }]);\n\n  return TransactionsTable;\n}(Component); //    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\n//    '/Accounts/ids/:User_id/:api_key'\n\n\nexport default withRouter(Records);","map":{"version":3,"sources":["/Users/michaelfultonjr./Documents/BankApp/pages/records.js"],"names":["React","Component","Container","Row","Col","Table","Button","Form","Image","Header","fetch","withRouter","Records","req","preHandle","event","ids","json","sender","id","target","value","transactions","isValid","accountIDs","map","account","Account_id","includes","filter","transaction","sender_account_id","receiver_account_id","user","User_id","query","Account","console","log","res","accountsJson","undefined","filteredjson","selectedAccount","filteredTransactions","props","state","selectAccount","handleSelection","bind","setState","FilterRecords","accountEnding","parent","accounts","Account_num","substr","length","Type_name","TableHeader","title","TableRow","dateTime","dateTimeArray","split","dateArray","year","month","day","dateString","time","finalString","createDateTime","date_time","amount","getAccountNum","sender_name","receiver_name","NoTransactions","TransactionsTable","rows"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Container, Row, Col, Table, Button, Form,Image} from 'react-bootstrap'\nimport Header from '../components/header.js'\nimport fetch from 'isomorphic-unfetch'\nimport {withRouter} from 'next/router'\n\nclass Records extends Component {\n\n  static async getInitialProps({req}){\n\n    var preHandle = function(event, ids, json,sender){\n      let id = event.target.value\n      var transactions;\n      var isValid = function(){\n      var accountIDs = ids.map((account) => account.Account_id )\n      return accountIDs.includes(sender)\n      }\n\n      return json.filter((transaction) => (isValid() ? transaction.sender_account_id : transaction.receiver_account_id) == sender )\n    }\n    const id = req.user.User_id\n    const account = req.query.Account\n    console.log(req.query)\n    var res = await fetch(`https://9d170bae.ngrok.io/Transactions/Mixed/${id}/0/secret`)\n\n    const json = await res.json()\n\n    res = await fetch(`https://9d170bae.ngrok.io/Accounts/ids/${id}/secret`)\n\n    const accountsJson = await res.json()\n    console.log(\"accountjson\")\n    console.log(accountsJson)\n    var filteredjson;\n    if (account != undefined){\n          const event = {\n        target: {value: account}\n          }\n        filteredjson = preHandle(event, accountsJson, json, account)\n        }\n\n\n    return {transactions: json, ids: accountsJson, selectedAccount: account, filteredTransactions: filteredjson}\n  }\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      selectAccount: this.props.selectedAccount != undefined ? this.props.selectedAccount : \"All\",\n      transactions: this.props.transactions,\n      filteredTransactions: this.props.filteredTransactions != undefined ? this.props.filteredTransactions : this.props.transactions,\n      ids: this.props.ids\n    }\n\n    this.handleSelection = this.handleSelection.bind(this)\n  }\n\n\n\n  handleSelection(event){\n    let id = event.target.value\n    var transactions;\n    var isValid = function(props, sender){\n    var accountIDs = props.ids.map((account) => account.Account_id )\n    return accountIDs.includes(sender)\n    }\n\n    if (id != \"All\") {\n      transactions = this.state.transactions.filter((transaction) =>\n      (isValid(this.state, transaction.sender_account_id) ?\n      transaction.sender_account_id : transaction.receiver_account_id) == id\n    )\n    } else {\n      transactions  = this.state.transactions\n    }\n    this.setState({\n      selectAccount: id,\n      filteredTransactions: transactions\n    })\n  }\n\n  render(){\n    return(\n      <Container>\n      <Header />\n        <Row>\n          <Col>\n            <FilterRecords accounts={this.props.ids} parent={this} />\n          </Col>\n          <Col>\n            <TransactionsTable parent={this} ids={this.props.ids} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nclass FilterRecords extends Component {\n  render(){\n    var accountEnding;\n    return(\n      <Form>\n        <Form.Group>\n          <Form.Control as =\"select\" name=\"selectAccount\" value={this.props.parent.state.selectAccount} onChange={this.props.parent.handleSelection}>\n            <option value=\"All\">All Accounts</option>\n            {this.props.accounts.map(function(account) {\n              accountEnding = account.Account_num.substr(account.Account_num.length - 4)\n                return(<option value={account.Account_id}>{account.Type_name} - ending in #...{accountEnding}</option>)\n            }) }\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    )\n  }\n}\n\nclass TableHeader extends Component {\n  render(){\n    return(\n      <th>\n        <Button>\n        <p>{this.props.title}</p>\n        <Image />\n        </Button>\n      </th>\n    )\n  }\n}\n\nclass TableRow extends Component {\n  //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n\n  isValid(){\n  var ids = this.props.ids.map((account) => account.Account_id)\n  return ids.includes(this.props.transaction.sender_account_id)\n  }\n\n  getAccountNum(id){\n    return this.props.ids.map(function(account){\n      if (account.Account_id == id) {\n        return account.Account_num\n      }\n    })\n  }\n  createDateTime(dateTime){\n    let dateTimeArray = dateTime.split(\"T\")\n    let dateArray = dateTimeArray[0].split('-')\n    let year = dateArray[0]\n    let month = dateArray[1]\n    let day = dateArray[2]\n    let dateString = month + \"/\" + day + \"/\" + year\n    let time = dateTimeArray[1].substr(dateTimeArray[1].length-8);\n    let finalString = dateString + \" \" + time\n    return finalString\n  }\n  render(){\n\n\n    return(\n      <tr>\n        <td>{this.createDateTime(this.props.transaction.date_time)} </td>\n        <td>${this.props.transaction.amount} </td>\n        <td>{this.getAccountNum(this.isValid(this.props) ?\n          this.props.transaction.sender_account_id :\n          this.props.transaction.receiver_account_id) } </td>\n        <td>{this.props.transaction.sender_name} </td>\n        <td>{this.props.transaction.receiver_name} </td>\n      </tr>\n    )\n  }\n}\n\nclass NoTransactions extends Component{\n  render(){\n    return(\n      <tr>\n        <td colSpan=\"5\">There are NO TRANSACTIONS for this Account.</td>\n      </tr>\n    )\n  }\n}\n\nclass TransactionsTable extends Component {\n\n  render(){\n    var rows = this.props.parent.state.filteredTransactions.map((transaction) => <TableRow transaction={transaction} ids={this.props.ids} />)\n    if (rows.length == 0) {\n      rows = <NoTransactions />\n      }\n    return(\n      <Table striped bordered hover >\n        <thead>\n          <tr>\n            <TableHeader title=\"Date\" />\n            <TableHeader title=\"Amount\" />\n            <TableHeader title=\"Account\" />\n            <TableHeader title=\"Sender\" />\n            <TableHeader title=\"Receiver\" />\n          </tr>\n        </thead>\n        <tbody>\n            {rows}\n        </tbody>\n      </Table>\n    )\n  }\n}\n//    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\n//    '/Accounts/ids/:User_id/:api_key'\nexport default withRouter(Records)\n"]},"metadata":{},"sourceType":"module"}