{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Table, Button, Form } from 'react-bootstrap';\nimport Header from '../components/header.js';\nimport fetch from 'isomorphic-unfetch';\n\nvar Records =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Records, _Component);\n\n  _createClass(Records, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req, id, res, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n                id = req.user.User_id;\n                res = fetch(\"https://9d170bae.ngrok.io/Transactions/Mixed/\".concat(id, \"/0/secret\"));\n                console.log(res);\n                json = res.json();\n                return _context.abrupt(\"return\", {\n                  transactions: json\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Records(props) {\n    var _this;\n\n    _classCallCheck(this, Records);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Records).call(this, props));\n    _this.state = {\n      account: \"All\",\n      senders: [],\n      recievers: [],\n      transactions: props.transactions\n    };\n    return _this;\n  } // filterAccounts(event){\n  //   let account = this.state.account\n  //   let transactions = this.state.transactions\n  //   let filteredResults = transactions.filter(transaction )\n  //\n  // }\n\n\n  _createClass(Records, [{\n    key: \"filterBySenderRecievers\",\n    value: function filterBySenderRecievers(event) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, null, React.createElement(Header, null), React.createElement(Row, null, React.createElement(Col, null, React.createElement(RecordsFilter, {\n        selectedAccount: this.props.id\n      })), React.createElement(Col, null, React.createElement(TransactionsTable, {\n        transactions: this.state.transactions\n      }))));\n    }\n  }]);\n\n  return Records;\n}(Component);\n\nvar RecordsFilter =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(RecordsFilter, _Component2);\n\n  function RecordsFilter() {\n    _classCallCheck(this, RecordsFilter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecordsFilter).apply(this, arguments));\n  }\n\n  _createClass(RecordsFilter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"p\", null, \"Filter By:\"), React.createElement(Form, null, React.createElement(Form.Group, null, React.createElement(Form.Label, null, \"Select an Account:\"), React.createElement(Form.Control, {\n        as: \"select\"\n      }, React.createElement(\"option\", null, \"All\"))), React.createElement(Form.Group, null, React.createElement(Form.Label, null, \"Sender:\")), React.createElement(Form.Group, null, React.createElement(Form.Label, null, \"Reciever:\")))));\n    }\n  }]);\n\n  return RecordsFilter;\n}(Component);\n\nvar TableHeader =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(TableHeader, _Component3);\n\n  function TableHeader() {\n    _classCallCheck(this, TableHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableHeader).apply(this, arguments));\n  }\n\n  _createClass(TableHeader, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"th\", null, React.createElement(Button, null, React.createElement(\"p\", null, this.props.title), React.createElement(Image, null)));\n    }\n  }]);\n\n  return TableHeader;\n}(Component);\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(TableRow, _Component4);\n\n  function TableRow() {\n    _classCallCheck(this, TableRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableRow).apply(this, arguments));\n  }\n\n  _createClass(TableRow, [{\n    key: \"render\",\n    //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n    value: function render() {\n      return React.createElement(\"tr\", null, React.createElement(\"td\", null, this.props.transaction.date_time, \" \"), React.createElement(\"td\", null, this.props.transaction.amount, \" \"), React.createElement(\"td\", null, this.props.id == this.props.transaction.sender_account_id ? this.props.transaction.sender_account_id : this.props.transaction.receiver_account_id, \" \"), React.createElement(\"td\", null, this.props.transaction.sender_name, \" \"), React.createElement(\"td\", null, this.props.transaction.receiver_name, \" \"));\n    }\n  }]);\n\n  return TableRow;\n}(Component);\n\nvar TransactionsTable =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(TransactionsTable, _Component5);\n\n  function TransactionsTable(props) {\n    var _this2;\n\n    _classCallCheck(this, TransactionsTable);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(TransactionsTable).call(this, props));\n    _this2.state = {\n      data: _this2.props.transactions.map(function (transaction) {\n        return React.createElement(TableRow, {\n          transaction: transaction\n        });\n      })\n    };\n    return _this2;\n  }\n\n  _createClass(TransactionsTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(TableHeader, {\n        title: \"Date\"\n      }), React.createElement(TableHeader, {\n        title: \"Amount\"\n      }), React.createElement(TableHeader, {\n        title: \"Account\"\n      }), React.createElement(TableHeader, {\n        title: \"Sender\"\n      }), React.createElement(TableHeader, {\n        title: \"Receiver\"\n      }))), React.createElement(\"tbody\", null, this.state.data));\n    }\n  }]);\n\n  return TransactionsTable;\n}(Component); //    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\n\n\nexport default Records;","map":{"version":3,"sources":["/Users/michaelfultonjr./Documents/BankApp/pages/records.js"],"names":["React","Component","Container","Row","Col","Table","Button","Form","Header","fetch","Records","req","id","user","User_id","res","console","log","json","transactions","props","state","account","senders","recievers","event","RecordsFilter","TableHeader","title","TableRow","transaction","date_time","amount","sender_account_id","receiver_account_id","sender_name","receiver_name","TransactionsTable","data","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Container, Row, Col, Table, Button, Form} from 'react-bootstrap'\nimport Header from '../components/header.js'\nimport fetch from 'isomorphic-unfetch'\n\nclass Records extends Component {\n\n  static async getInitialProps({req}){\n    const id = req.user.User_id\n    const res = fetch(`https://9d170bae.ngrok.io/Transactions/Mixed/${id}/0/secret`)\n    console.log(res)\n    const json = res.json()\n\n    return {transactions: json}\n  }\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      account: \"All\",\n      senders: [],\n      recievers: [],\n      transactions: props.transactions\n    }\n\n  }\n\n  // filterAccounts(event){\n  //   let account = this.state.account\n  //   let transactions = this.state.transactions\n  //   let filteredResults = transactions.filter(transaction )\n  //\n  // }\n\n  filterBySenderRecievers(event){\n\n  }\n\n\n\n  render(){\n    return(\n      <Container>\n      <Header />\n        <Row>\n          <Col>\n            <RecordsFilter selectedAccount={this.props.id}/>\n          </Col>\n          <Col>\n            <TransactionsTable transactions={this.state.transactions} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nclass RecordsFilter extends Component {\n  render(){\n    return(\n      <Row>\n        <Col>\n        <p>Filter By:</p>\n        <Form>\n        <Form.Group>\n          <Form.Label>Select an Account:</Form.Label>\n          <Form.Control as=\"select\">\n            <option>All</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Sender:</Form.Label>\n\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Reciever:</Form.Label>\n\n        </Form.Group>\n\n        </Form>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass TableHeader extends Component {\n  render(){\n    return(\n      <th>\n        <Button>\n        <p>{this.props.title}</p>\n        <Image />\n        </Button>\n      </th>\n    )\n  }\n}\n\nclass TableRow extends Component {\n  //amount, sender_account_id, receiver_account_id, date_time,sender_name,receiver_name\n\n  render(){\n    return(\n      <tr>\n        <td>{this.props.transaction.date_time} </td>\n        <td>{this.props.transaction.amount} </td>\n        <td>{this.props.id == this.props.transaction.sender_account_id ?\n          this.props.transaction.sender_account_id :\n          this.props.transaction.receiver_account_id } </td>\n        <td>{this.props.transaction.sender_name} </td>\n        <td>{this.props.transaction.receiver_name} </td>\n      </tr>\n    )\n  }\n}\n\nclass TransactionsTable extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      data: this.props.transactions.map((transaction) => <TableRow transaction={transaction} />)\n    }\n  }\n\n  render(){\n    return(\n      <Table striped bordered hover >\n        <thead>\n          <tr>\n            <TableHeader title=\"Date\" />\n            <TableHeader title=\"Amount\" />\n            <TableHeader title=\"Account\" />\n            <TableHeader title=\"Sender\" />\n            <TableHeader title=\"Receiver\" />\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.data}\n        </tbody>\n      </Table>\n    )\n  }\n}\n//    '/Transactions/Mixed/:User_id/:rowAmount/:api_key'\nexport default Records\n"]},"metadata":{},"sourceType":"module"}